/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct I2faRegisterKey200ResponseExcludeCredentialsInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "transports")]
    pub transports: Vec<Transports>,
}

impl I2faRegisterKey200ResponseExcludeCredentialsInner {
    pub fn new(id: String, r#type: String, transports: Vec<Transports>) -> I2faRegisterKey200ResponseExcludeCredentialsInner {
        I2faRegisterKey200ResponseExcludeCredentialsInner {
            id,
            r#type,
            transports,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Transports {
    #[serde(rename = "ble")]
    Ble,
    #[serde(rename = "cable")]
    Cable,
    #[serde(rename = "hybrid")]
    Hybrid,
    #[serde(rename = "internal")]
    Internal,
    #[serde(rename = "nfc")]
    Nfc,
    #[serde(rename = "smart-card")]
    SmartCard,
    #[serde(rename = "usb")]
    Usb,
}

impl Default for Transports {
    fn default() -> Transports {
        Self::Ble
    }
}

