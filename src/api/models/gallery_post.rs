/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GalleryPost {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "user")]
    pub user: models::UserLite,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
    #[serde(rename = "fileIds", skip_serializing_if = "Option::is_none")]
    pub file_ids: Option<Vec<String>>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Vec<models::DriveFile>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "isSensitive")]
    pub is_sensitive: bool,
    #[serde(rename = "likedCount")]
    pub liked_count: f64,
    #[serde(rename = "isLiked", skip_serializing_if = "Option::is_none")]
    pub is_liked: Option<bool>,
}

impl GalleryPost {
    pub fn new(id: String, created_at: String, updated_at: String, user_id: String, user: models::UserLite, title: String, description: Option<String>, is_sensitive: bool, liked_count: f64) -> GalleryPost {
        GalleryPost {
            id,
            created_at,
            updated_at,
            user_id,
            user,
            title,
            description,
            file_ids: None,
            files: None,
            tags: None,
            is_sensitive,
            liked_count,
            is_liked: None,
        }
    }
}

