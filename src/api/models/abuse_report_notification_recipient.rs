/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AbuseReportNotificationRecipient {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "isActive")]
    pub is_active: bool,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "method")]
    pub method: Method,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::UserLite>>,
    #[serde(rename = "systemWebhookId", skip_serializing_if = "Option::is_none")]
    pub system_webhook_id: Option<String>,
    #[serde(rename = "systemWebhook", skip_serializing_if = "Option::is_none")]
    pub system_webhook: Option<Box<models::SystemWebhook>>,
}

impl AbuseReportNotificationRecipient {
    pub fn new(id: String, is_active: bool, updated_at: String, name: String, method: Method) -> AbuseReportNotificationRecipient {
        AbuseReportNotificationRecipient {
            id,
            is_active,
            updated_at,
            name,
            method,
            user_id: None,
            user: None,
            system_webhook_id: None,
            system_webhook: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Method {
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "webhook")]
    Webhook,
}

impl Default for Method {
    fn default() -> Method {
        Self::Email
    }
}

