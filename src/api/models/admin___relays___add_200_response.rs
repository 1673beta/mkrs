/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdminRelaysAdd200Response {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "inbox")]
    pub inbox: String,
    #[serde(rename = "status")]
    pub status: Status,
}

impl AdminRelaysAdd200Response {
    pub fn new(id: String, inbox: String, status: Status) -> AdminRelaysAdd200Response {
        AdminRelaysAdd200Response {
            id,
            inbox,
            status,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "requesting")]
    Requesting,
    #[serde(rename = "accepted")]
    Accepted,
    #[serde(rename = "rejected")]
    Rejected,
}

impl Default for Status {
    fn default() -> Status {
        Self::Requesting
    }
}

