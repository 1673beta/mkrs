/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChartsInstance200Response {
    #[serde(rename = "requests")]
    pub requests: Box<models::ChartsInstance200ResponseRequests>,
    #[serde(rename = "notes")]
    pub notes: Box<models::ChartsInstance200ResponseNotes>,
    #[serde(rename = "users")]
    pub users: Box<models::ChartsInstance200ResponseUsers>,
    #[serde(rename = "following")]
    pub following: Box<models::ChartsInstance200ResponseUsers>,
    #[serde(rename = "followers")]
    pub followers: Box<models::ChartsInstance200ResponseUsers>,
    #[serde(rename = "drive")]
    pub drive: Box<models::ChartsInstance200ResponseDrive>,
}

impl ChartsInstance200Response {
    pub fn new(requests: models::ChartsInstance200ResponseRequests, notes: models::ChartsInstance200ResponseNotes, users: models::ChartsInstance200ResponseUsers, following: models::ChartsInstance200ResponseUsers, followers: models::ChartsInstance200ResponseUsers, drive: models::ChartsInstance200ResponseDrive) -> ChartsInstance200Response {
        ChartsInstance200Response {
            requests: Box::new(requests),
            notes: Box::new(notes),
            users: Box::new(users),
            following: Box::new(following),
            followers: Box::new(followers),
            drive: Box::new(drive),
        }
    }
}

