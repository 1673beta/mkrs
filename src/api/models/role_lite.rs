/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RoleLite {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "color", deserialize_with = "Option::deserialize")]
    pub color: Option<String>,
    #[serde(rename = "iconUrl", deserialize_with = "Option::deserialize")]
    pub icon_url: Option<String>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "isModerator")]
    pub is_moderator: bool,
    #[serde(rename = "isAdministrator")]
    pub is_administrator: bool,
    #[serde(rename = "displayOrder")]
    pub display_order: i32,
}

impl RoleLite {
    pub fn new(id: String, name: String, color: Option<String>, icon_url: Option<String>, description: String, is_moderator: bool, is_administrator: bool, display_order: i32) -> RoleLite {
        RoleLite {
            id,
            name,
            color,
            icon_url,
            description,
            is_moderator,
            is_administrator,
            display_order,
        }
    }
}

