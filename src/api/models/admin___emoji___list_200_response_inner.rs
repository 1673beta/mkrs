/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdminEmojiList200ResponseInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "aliases")]
    pub aliases: Vec<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "category", deserialize_with = "Option::deserialize")]
    pub category: Option<String>,
    /// The local host is represented with `null`. The field exists for compatibility with other API endpoints that return files.
    #[serde(rename = "host", deserialize_with = "Option::deserialize")]
    pub host: Option<String>,
    #[serde(rename = "url")]
    pub url: String,
}

impl AdminEmojiList200ResponseInner {
    pub fn new(id: String, aliases: Vec<String>, name: String, category: Option<String>, host: Option<String>, url: String) -> AdminEmojiList200ResponseInner {
        AdminEmojiList200ResponseInner {
            id,
            aliases,
            name,
            category,
            host,
            url,
        }
    }
}

