/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotesSearchByTagRequest {
    #[serde(rename = "reply", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub reply: Option<Option<bool>>,
    #[serde(rename = "renote", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub renote: Option<Option<bool>>,
    /// Only show notes that have attached files.
    #[serde(rename = "withFiles", skip_serializing_if = "Option::is_none")]
    pub with_files: Option<bool>,
    #[serde(rename = "poll", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub poll: Option<Option<bool>>,
    #[serde(rename = "sinceId", skip_serializing_if = "Option::is_none")]
    pub since_id: Option<String>,
    #[serde(rename = "untilId", skip_serializing_if = "Option::is_none")]
    pub until_id: Option<String>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    /// The outer arrays are chained with OR, the inner arrays are chained with AND.
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<Vec<Vec<String>>>,
}

impl NotesSearchByTagRequest {
    pub fn new() -> NotesSearchByTagRequest {
        NotesSearchByTagRequest {
            reply: None,
            renote: None,
            with_files: None,
            poll: None,
            since_id: None,
            until_id: None,
            limit: None,
            tag: None,
            query: None,
        }
    }
}

