/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DriveFolder {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "parentId", deserialize_with = "Option::deserialize")]
    pub parent_id: Option<String>,
    #[serde(rename = "foldersCount", skip_serializing_if = "Option::is_none")]
    pub folders_count: Option<f64>,
    #[serde(rename = "filesCount", skip_serializing_if = "Option::is_none")]
    pub files_count: Option<f64>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<Box<models::DriveFolder>>,
}

impl DriveFolder {
    pub fn new(id: String, created_at: String, name: String, parent_id: Option<String>) -> DriveFolder {
        DriveFolder {
            id,
            created_at,
            name,
            parent_id,
            folders_count: None,
            files_count: None,
            parent: None,
        }
    }
}

