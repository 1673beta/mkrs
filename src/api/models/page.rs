/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Page {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "user")]
    pub user: models::UserLite,
    #[serde(rename = "content")]
    pub content: Vec<models::PageBlock>,
    #[serde(rename = "variables")]
    pub variables: Vec<serde_json::Value>,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "summary", deserialize_with = "Option::deserialize")]
    pub summary: Option<String>,
    #[serde(rename = "hideTitleWhenPinned")]
    pub hide_title_when_pinned: bool,
    #[serde(rename = "alignCenter")]
    pub align_center: bool,
    #[serde(rename = "font")]
    pub font: String,
    #[serde(rename = "script")]
    pub script: String,
    #[serde(rename = "eyeCatchingImageId", deserialize_with = "Option::deserialize")]
    pub eye_catching_image_id: Option<String>,
    #[serde(rename = "eyeCatchingImage")]
    pub eye_catching_image: Box<models::DriveFile>,
    #[serde(rename = "attachedFiles")]
    pub attached_files: Vec<models::DriveFile>,
    #[serde(rename = "likedCount")]
    pub liked_count: f64,
    #[serde(rename = "isLiked", skip_serializing_if = "Option::is_none")]
    pub is_liked: Option<bool>,
}

impl Page {
    pub fn new(id: String, created_at: String, updated_at: String, user_id: String, user: models::UserLite, content: Vec<models::PageBlock>, variables: Vec<serde_json::Value>, title: String, name: String, summary: Option<String>, hide_title_when_pinned: bool, align_center: bool, font: String, script: String, eye_catching_image_id: Option<String>, eye_catching_image: models::DriveFile, attached_files: Vec<models::DriveFile>, liked_count: f64) -> Page {
        Page {
            id,
            created_at,
            updated_at,
            user_id,
            user,
            content,
            variables,
            title,
            name,
            summary,
            hide_title_when_pinned,
            align_center,
            font,
            script,
            eye_catching_image_id,
            eye_catching_image: Box::new(eye_catching_image),
            attached_files,
            liked_count,
            is_liked: None,
        }
    }
}

