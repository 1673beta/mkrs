/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdminSystemWebhookCreateRequest {
    #[serde(rename = "isActive")]
    pub is_active: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "on")]
    pub on: Vec<On>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "secret")]
    pub secret: String,
}

impl AdminSystemWebhookCreateRequest {
    pub fn new(is_active: bool, name: String, on: Vec<On>, url: String, secret: String) -> AdminSystemWebhookCreateRequest {
        AdminSystemWebhookCreateRequest {
            is_active,
            name,
            on,
            url,
            secret,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum On {
    #[serde(rename = "abuseReport")]
    AbuseReport,
    #[serde(rename = "abuseReportResolved")]
    AbuseReportResolved,
    #[serde(rename = "userCreated")]
    UserCreated,
}

impl Default for On {
    fn default() -> On {
        Self::AbuseReport
    }
}

