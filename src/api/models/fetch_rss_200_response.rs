/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FetchRss200Response {
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<Box<models::FetchRss200ResponseImage>>,
    #[serde(rename = "paginationLinks", skip_serializing_if = "Option::is_none")]
    pub pagination_links: Option<Box<models::FetchRss200ResponsePaginationLinks>>,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "items")]
    pub items: Vec<models::FetchRss200ResponseItemsInner>,
    #[serde(rename = "feedUrl", skip_serializing_if = "Option::is_none")]
    pub feed_url: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "itunes", skip_serializing_if = "Option::is_none")]
    pub itunes: Option<models::FetchRss200ResponseItunes>,
}

impl FetchRss200Response {
    pub fn new(items: Vec<models::FetchRss200ResponseItemsInner>) -> FetchRss200Response {
        FetchRss200Response {
            image: None,
            pagination_links: None,
            link: None,
            title: None,
            items,
            feed_url: None,
            description: None,
            itunes: None,
        }
    }
}

