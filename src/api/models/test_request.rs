/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TestRequest {
    #[serde(rename = "required")]
    pub required: bool,
    #[serde(rename = "string", skip_serializing_if = "Option::is_none")]
    pub string: Option<String>,
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<String>,
    #[serde(rename = "nullableDefault", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub nullable_default: Option<Option<String>>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl TestRequest {
    pub fn new(required: bool) -> TestRequest {
        TestRequest {
            required,
            string: None,
            default: None,
            nullable_default: None,
            id: None,
        }
    }
}

