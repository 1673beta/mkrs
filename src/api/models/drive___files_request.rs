/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DriveFilesRequest {
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "sinceId", skip_serializing_if = "Option::is_none")]
    pub since_id: Option<String>,
    #[serde(rename = "untilId", skip_serializing_if = "Option::is_none")]
    pub until_id: Option<String>,
    #[serde(rename = "folderId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub folder_id: Option<Option<String>>,
    #[serde(rename = "type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Option<String>>,
    #[serde(rename = "sort", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Option<Sort>>,
}

impl DriveFilesRequest {
    pub fn new() -> DriveFilesRequest {
        DriveFilesRequest {
            limit: None,
            since_id: None,
            until_id: None,
            folder_id: None,
            r#type: None,
            sort: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Sort {
    #[serde(rename = "+createdAt")]
    PlusCreatedAt,
    #[serde(rename = "-createdAt")]
    CreatedAt,
    #[serde(rename = "+name")]
    PlusName,
    #[serde(rename = "-name")]
    Name,
    #[serde(rename = "+size")]
    PlusSize,
    #[serde(rename = "-size")]
    Size,
}

impl Default for Sort {
    fn default() -> Sort {
        Self::PlusCreatedAt
    }
}

