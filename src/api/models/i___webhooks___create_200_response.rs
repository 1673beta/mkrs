/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IWebhooksCreate200Response {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "on")]
    pub on: Vec<On>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "secret")]
    pub secret: String,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "latestSentAt", deserialize_with = "Option::deserialize")]
    pub latest_sent_at: Option<String>,
    #[serde(rename = "latestStatus", deserialize_with = "Option::deserialize")]
    pub latest_status: Option<i32>,
}

impl IWebhooksCreate200Response {
    pub fn new(id: String, user_id: String, name: String, on: Vec<On>, url: String, secret: String, active: bool, latest_sent_at: Option<String>, latest_status: Option<i32>) -> IWebhooksCreate200Response {
        IWebhooksCreate200Response {
            id,
            user_id,
            name,
            on,
            url,
            secret,
            active,
            latest_sent_at,
            latest_status,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum On {
    #[serde(rename = "mention")]
    Mention,
    #[serde(rename = "unfollow")]
    Unfollow,
    #[serde(rename = "follow")]
    Follow,
    #[serde(rename = "followed")]
    Followed,
    #[serde(rename = "note")]
    Note,
    #[serde(rename = "reply")]
    Reply,
    #[serde(rename = "renote")]
    Renote,
    #[serde(rename = "reaction")]
    Reaction,
}

impl Default for On {
    fn default() -> On {
        Self::Mention
    }
}

