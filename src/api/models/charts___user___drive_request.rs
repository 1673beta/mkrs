/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChartsUserDriveRequest {
    #[serde(rename = "span")]
    pub span: Span,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "offset", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub offset: Option<Option<i32>>,
    #[serde(rename = "userId")]
    pub user_id: String,
}

impl ChartsUserDriveRequest {
    pub fn new(span: Span, user_id: String) -> ChartsUserDriveRequest {
        ChartsUserDriveRequest {
            span,
            limit: None,
            offset: None,
            user_id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Span {
    #[serde(rename = "day")]
    Day,
    #[serde(rename = "hour")]
    Hour,
}

impl Default for Span {
    fn default() -> Span {
        Self::Day
    }
}

