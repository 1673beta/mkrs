/*
 * Misskey API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024.9.0-alpha.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdminInviteListRequest {
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Sort>,
}

impl AdminInviteListRequest {
    pub fn new() -> AdminInviteListRequest {
        AdminInviteListRequest {
            limit: None,
            offset: None,
            r#type: None,
            sort: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "unused")]
    Unused,
    #[serde(rename = "used")]
    Used,
    #[serde(rename = "expired")]
    Expired,
    #[serde(rename = "all")]
    All,
}

impl Default for Type {
    fn default() -> Type {
        Self::Unused
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Sort {
    #[serde(rename = "+createdAt")]
    PlusCreatedAt,
    #[serde(rename = "-createdAt")]
    CreatedAt,
    #[serde(rename = "+usedAt")]
    PlusUsedAt,
    #[serde(rename = "-usedAt")]
    UsedAt,
}

impl Default for Sort {
    fn default() -> Sort {
        Self::PlusCreatedAt
    }
}

